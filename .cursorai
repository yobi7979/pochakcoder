# SportsCoder Cursor AI 설정

## 프로젝트 컨텍스트
이 프로젝트는 SportsCoder라는 스포츠 경기 관리 시스템입니다.

## 필수 참고 문서 (작업 전 반드시 읽기)
1. **JAVASCRIPT_FILES_REFERENCE.md** - JavaScript 파일 역할 및 의존성
2. **API_REFERENCE.md** - API 엔드포인트 상세 정보 (122개)
3. **REFACTORING_PLAN.md** - 리팩토링 계획 및 마이그레이션 전략
4. **PROJECT_STRUCTURE.md** - 프로젝트 구조 및 파일 분류
5. **README.md** - 프로젝트 개요

## 핵심 파일
- **server.js**: 메인 서버 (8,119줄, 122개 API)
- **models/**: 데이터베이스 모델
- **backup-restore.js**: 백업/복원 기능
- **public/js/**: 프론트엔드 JavaScript

## 작업 규칙
- 모든 작업 전 참고 문서 확인 필수
- API 수정 시 API_REFERENCE.md의 라인 번호 참고
- 파일 생성 시 JAVASCRIPT_FILES_REFERENCE.md 분류 체계 준수
- 리팩토링 시 REFACTORING_PLAN.md 전략 준수
- 구조 변경 시 PROJECT_STRUCTURE.md 분류 체계 준수

## 📊 작업 진행상황 표시 규칙
모든 작업 시 다음 형식으로 진행상황을 화면에 표시하세요:

### 1단계: 작업 시작
```
🚀 SportsCoder 프로젝트 작업 시작
📚 참고 문서 로딩 중...
✅ JAVASCRIPT_FILES_REFERENCE.md 확인 완료
✅ API_REFERENCE.md 확인 완료  
✅ REFACTORING_PLAN.md 확인 완료
✅ PROJECT_STRUCTURE.md 확인 완료
✅ README.md 확인 완료
```

### 2단계: 작업 분석
```
🔍 작업 분석 중...
📁 대상 파일: [파일명]
🎯 작업 유형: [API수정/파일생성/리팩토링/구조변경]
📋 주요 참고 문서: [해당 문서명]
⚠️ 주의사항: [관련 주의사항]
```

### 3단계: 작업 실행
```
⚡ 작업 실행 중...
📝 현재 작업: [구체적인 작업 내용]
🔗 관련 API: [API 엔드포인트]
📋 적용 규칙: [참고한 문서의 규칙]
```

### 4단계: 작업 완료
```
✅ 작업 완료
📁 수정된 파일: [파일명]
🔗 관련 API: [API 엔드포인트]
📋 적용된 규칙: [참고한 문서명]
🎯 다음 단계: [후속 작업이 있다면]
```

## 금지사항
- 핵심 파일 삭제 금지
- API 엔드포인트 URL 변경 금지
- 요청/응답 형식 변경 금지
- 참고 문서 무시한 작업 금지
