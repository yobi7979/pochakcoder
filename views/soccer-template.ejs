<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>축구 경기 오버레이</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/animations.css" rel="stylesheet">
    <script src="/socket.io/socket.io.js"></script>
    <style>
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Noto Sans KR', Arial, sans-serif;
        }
        body {
            width: 1920px;
            height: 1080px;
            overflow: hidden;
            background-color: transparent;
            position: relative;
        }
        .overlay-container {
            width: 100%;
            height: 100%;
            position: relative;
        }        

        /* 상단 스코어보드 */
        .scoreboard {
            position: absolute;
            top: 20px;
            left: 50px;
            transform: translateX(0%);
            width: 420px;
            height: 90px;
            background-color: transparent; /* 검정 배경 제거 */
            border-radius: 8px;
            display: flex;
            color: rgb(255, 255, 255);
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .scoreboard.animate-slide {
            animation: slideIn 0.5s ease-in-out;
        }

        @keyframes slideIn {
            0% {
                transform: translateY(-100%);
                opacity: 1;
            }
            100% {
                transform: translateY(0);
                opacity: 1;
            }
        }

        /* 내부 요소들의 개별 애니메이션 제거 */
        .team-section, .score-section, .team-header, .team-content, .team-logo, .team-name,
        .score-display, .match-time {
            transition: none;
            animation: none;
        }

        .team-section {
            flex: 1 1 0;
            min-width: 0;
        }
        .score-section {
            flex: 0 0 80px;
            width: 80px;
            max-width: 80px;
            min-width: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }
        .team-name, .score-display {
            min-width: 0;
            max-width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .team-section.home {
            background-color: rgb(0, 204, 51); /* rgba 대신 rgb 사용으로 완전 불투명 */
            border-radius: 8px 0 0 8px;
        }
        .team-section.away {
            background-color: rgb(0, 204, 51); /* rgba 대신 rgb 사용으로 완전 불투명 */
            border-radius: 0 8px 8px 0;
        }
        .team-header {
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            font-weight: bold;
            background-color: rgba(255, 255, 255, 0.1);
            /* 아래 추가: 화면에서 숨김 */
            visibility: hidden;
            opacity: 0;
        }
        .home .team-header {
            background-color: rgba(0, 0, 0, 0.6);
            border-radius: 8px 0 0 0;
        }
        .away .team-header {
            background-color: rgba(0, 0, 0, 0.6);
            border-radius: 0 8px 0 0;
        }
        .team-content {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            padding: 0 15px;
        }
        /* 외부 로고 섹션 스타일 */
        .team-logo-section {
            position: absolute;
            width: 60px;
            height: 60px;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
            opacity: 0;
        }
        
        .team-logo-section.home-logo {
            top: -120px;
            left: 50px;
        }
        
        .team-logo-section.away-logo {
            top: -120px;
            right: 1420px;
        }
        
        .team-logo-section .team-logo {
            width: 100%;
            height: 100%;
            margin: 0;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        
        .team-logo {
            width: 40px;
            height: 40px;
            margin-right: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 5px;
            overflow: hidden;
            background-color: rgb(0, 204, 51); /* 홈팀 로고 배경 완전 불투명 */
        }
        .away .team-logo {
            margin-right: 0;
            margin-left: 10px;
            background-color: rgb(0, 204, 51); /* 어웨이팀 로고 배경 완전 불투명 */
        }
        .team-logo img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }
        .team-logo.no-logo {
            font-size: 16px;
            color: rgba(255, 255, 255, 0.7);
        }
        .team-logo-placeholder {
            width: 100%;
            height: 100%;
            border-radius: 5px;
            background-color: rgb(0, 0, 0); /* 완전 불투명한 검은색 */
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: white;
            font-size: 24px;
        }
        .team-name {
            font-size: 20px;
            font-weight: bold;
            text-align: center;
            width: 100%;
            margin: 0 auto;
            padding: 0 4px;
            white-space: normal;
        }
        .home .team-name,
        .away .team-name {
            margin: 0;
            padding: 0 4px;
        }
        .score-display {
            margin-top: -4px;
            font-size: 38px;
            font-weight: bold;
            display: flex;
            align-items: center;
        }
        .score-divider {
            margin: 0 2px;
            color: rgba(255, 255, 255, 0.5);
        }
        .match-time {
            margin-bottom: 15px;
            font-size: 26px;
            padding: -10px 12px;
            min-width: 80px;
            text-align: center;
            background-color: rgb(50, 50, 50);
            border-radius: 3px;
        }
        
        /* 경기 상태 표시 */
        .match-state {
            position: absolute;
            top: 65px;
            left: 200px;
            width: 150px;
            background-color: rgba(0, 0, 0, 1.0);
            border-radius: 6px;
            color: white;
            padding: 2px 0;
            font-size: 20px;
            min-width: 0;
            text-align: center;
            margin: 0;
            transition: all 0.3s ease;            
        }
        
        .match-state.animate-slide {
            animation: slideIn 0.5s ease-in-out;
        }
        
        @keyframes slideIn {
            0% {
                transform: translateY(-20px);
                opacity: 0;
            }
            100% {
                transform: translateY(0);
                opacity: 1;
            }
        }
        
        /* 라인업 박스 스타일 */
        .lineup-container {
            position: absolute;
            width: 350px;
            background-color: rgba(0, 0, 0, 0.8);
            border-radius: 10px;
            color: white;
            padding: 15px;
            display: flex;
            flex-direction: column;
            transform: translateX(-120%);
            transition: transform 0.5s ease;
            max-height: 80%; /* 화면의 최대 80%까지만 높이 사용 */
            overflow: hidden; /* 내부 스크롤을 위해 컨테이너 자체는 넘침 숨김 */
            opacity: 0; /* 투명 */
        }
        
        .lineup-container.home {
            left: 50px;
            top: 200px;
            border-left: 5px solid rgb(0, 204, 51);
        }
        
        .lineup-container.away {
            right: 50px;
            top: 200px;
            border-left: 5px solid rgb(0, 204, 51);
            transform: translateX(120%);
        }
        
        .lineup-container.visible {
            transform: translateX(0);
        }
        
        .lineup-header {
            background-color: rgba(0, 0, 0, 0.6);
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 15px;
            text-align: center;
            font-weight: bold;
            font-size: 18px;
        }
        
        .lineup-header.home {
            background-color: rgba(0, 204, 51, 0.6);
        }
        
        .lineup-header.away {
            background-color: rgba(220, 38, 38, 0.6);
        }
        
        .lineup-list {
            display: flex;
            flex-direction: column;
            gap: 8px;
            overflow-y: auto; /* 내용이 많으면 스크롤 허용 */
            flex-grow: 1; /* 컨테이너 내에서 남은 공간 모두 사용 */
            padding-right: 5px; /* 스크롤바 공간 확보 */
        }
        
        .lineup-player {
            display: flex;
            align-items: center;
            padding: 8px 12px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 5px;
            font-size: 16px;
            width: 100%; /* 전체 너비 사용 */
            height: 40px;
            gap: 10px; /* 요소 간 간격 추가 */
        }
        
        .lineup-player:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }
        
        .player-number {
            width: 40px;
            height: 24px;
            background-color: #333;
            color: white;
            border-radius: 4px; /* 원형에서 박스형태로 변경 */
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 0; /* 간격 제거 */
            font-size: 14px !important; /* 강제 적용 */
            flex-shrink: 0;
        }
        
        .home .player-number {
            background-color: rgb(0, 204, 51);
        }
        
        .away .player-number {
            background-color: rgb(0, 204, 51);
        }
        
        .player-name {
            margin-top: 5px;
            font-weight: bold;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 120px;
            flex-shrink: 1;
            flex-grow: 0;
            font-size: 12px; /* 번호와 동일한 폰트 크기 */
        }
        
        .player-position {
            font-size: 12px;
            color: rgba(255, 255, 255, 0.7);
            padding: 2px 5px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 3px;
            white-space: nowrap;
            flex-shrink: 0;
            margin-left: auto; /* 오른쪽으로 밀어내기 */
        }
        
        .goalkeeper-label {
            background-color: rgba(251, 191, 36, 0.8);
            color: black;
            padding: 2px 6px;
            border-radius: 3px;
            font-size: 12px;
            white-space: nowrap;
            flex-shrink: 0;
        }

        /* 선수 카드 */
        .player-card {
            position: absolute;
            bottom: 120px;
            width: 320px;
            height: 100px;
            background-color: rgba(0, 0, 0, 0.8);
            border-radius: 8px;
            color: white;
            overflow: hidden;
            display: flex;
            opacity: 0;
            transition: opacity 0.5s ease;
        }
        .player-card.visible {
            opacity: 1;
        }
        .player-card.home {
            left: 20px;
        }
        .player-card.away {
            right: 20px;
        }
        .player-header {
            width: 100px;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background-color: rgba(0, 0, 0, 0.3);
            padding: 10px;
        }
        .home .player-header {
            background-color: rgba(0, 204, 51, 0.4);
        }
        .away .player-header {
            background-color: rgba(0, 204, 51, 0.4);
        }
        .player-number {
            font-size: 36px;
            font-weight: bold;
            margin-bottom: 5px;
        }
        .player-position {
            font-size: 14px;
            color: rgba(255, 255, 255, 0.7);
        }
        .player-info {
            flex: 1;
            padding: 15px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }
        .player-name {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 10px;
        }
        .player-stats {
            display: flex;
            justify-content: space-between;
        }
        .stat-item {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .stat-value {
            font-size: 18px;
            font-weight: bold;
        }
        .stat-label {
            font-size: 12px;
            color: rgba(255, 255, 255, 0.6);
            margin-top: 3px;
        }
        
        /* 경기 정보 (하단) */
        .match-info {
            position: absolute;
            bottom: -100px;
            left: 25%;
            width: 800px;
            height: 80px;
            background-color: rgba(0, 0, 0, 0.8);
            border-radius: 8px;
            color: white;
            display: flex;
            justify-content: space-around;
            align-items: center;
            padding: 0 20px;
            z-index: 1000;
            transition: bottom 0.5s ease;
            opacity: 0;
        }

        .match-info.visible {
            bottom: 20px;
            opacity: 1;
        }

        .info-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            min-width: 150px;
        }
        .info-label {
            font-size: 14px;
            color: rgba(255, 255, 255, 0.7);
            margin-bottom: 5px;
        }
        .info-value {
            font-size: 20px;
            font-weight: bold;
            display: flex;
            align-items: center;
        }

        /* 스코어보드 애니메이션 스타일 */
        .animate-slide {
            animation: slideIn 0.5s ease-in-out;
        }
        
        @keyframes slideIn {
            0% {
                transform: translateY(-100%);
                opacity: 0;
            }
            100% {
                transform: translateY(0);
                opacity: 1;
            }
        }
        
        @keyframes slideInLeft {
            0% {
                transform: translateX(-120%);
                opacity: 0;
            }
            100% {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        @keyframes slideInRight {
            0% {
                transform: translateX(120%);
                opacity: 0;
            }
            100% {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        .lineup-container.home.visible {
            animation: slideInLeft 0.8s ease;
        }
        
        .lineup-container.away.visible {
            animation: slideInRight 0.8s ease;
        }
        .scoreboard-row {
            display: flex;
            align-items: center;
            position: absolute;
            top: 20px;
            left: 50px;
            z-index: 10;
            overflow: visible;
            width: fit-content;
            min-width: 900px;
        }
        .scoreboard {
            position: static;
            margin-right: 0;
            width: auto;
            min-width: 550px;
            max-width: none;
        }
        .team-section {
            width: 32%;
            display: flex;
            flex-direction: column;
            position: relative;
            height: 42px;
        }
        .score-section {
            width: 32%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background-color: rgba(0, 0, 0, 1.0);
            height: 42px;
        }
        .match-timer-section {
            position: static;
            margin: 0;
            margin-left: 8px;
            min-width: 90px;
            width: 90px;
            height: 42px;
            background: rgb(0,0,0);
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 8px rgba(0,0,0,0.15);
            flex-shrink: 0;
            padding: 0;
            overflow: hidden;
        }
        .match-timer-section .match-time {
            width: 100%;
            text-align: center;
            font-size: 24px;
            color: #fff;
            font-weight: bold;
            margin: 0;
            padding: 0;
            background: none;
            border-radius: 0;
            min-width: 0;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }
        .team-name.small-font {
            font-size: 16px !important;
        }
    </style>
</head>
<body>
    <div class="overlay-container">
        <!-- 팀 헤더 섹션 -->
        <div class="team-headers-section">
            <div class="team-header home">HOME</div>
            <div class="team-header away">AWAY</div>
        </div>
        
        <!-- 홈팀 로고 섹션 -->
        <div class="team-logo-section home-logo">
            <div class="team-logo" style="background-color: rgb(0, 204, 51);">
                <% if (match.match_data?.home_team_logo) { %>
                    <img src="<%= match.match_data.home_team_logo %>" alt="홈팀 로고">
                <% } else { %>
                    <div class="team-logo-placeholder"></div>
                <% } %>
            </div>
        </div>
        
        <!-- 어웨이팀 로고 섹션 -->
        <div class="team-logo-section away-logo">
            <div class="team-logo" style="background-color: rgb(255, 255, 255);">
                <% if (match.match_data?.away_team_logo) { %>
                    <img src="<%= match.match_data.away_team_logo %>" alt="원정팀 로고">
                <% } else { %>
                    <div class="team-logo-placeholder"></div>
                <% } %>
            </div>
        </div>
        
        <!-- 스코어보드+타이머 수평 정렬 래퍼 -->
        <div class="scoreboard-row">
            <div class="scoreboard">
                <div class="team-section home">
                    <div class="team-content">
                        <div class="team-name"><%= match.home_team || 'HOME' %></div>
                    </div>
                </div>
                <div class="score-section">
                    <div class="score-display">
                        <span class="home-score"><%= match.home_score || 0 %></span>
                        <span class="score-divider">-</span>
                        <span class="away-score"><%= match.away_score || 0 %></span>
                    </div>
                </div>
                <div class="team-section away">
                    <div class="team-content">
                        <div class="team-name"><%= match.away_team || 'AWAY' %></div>
                    </div>
                </div>
                <div class="match-timer-section">
                    <div class="match-time">
                        <%= match.match_data?.minute || 0 %>:<%= match.match_data?.second?.toString().padStart(2, '0') || '00' %>
                    </div>
                </div>
            </div>
        </div>
        <div class="match-state">
            <span class="state-text"><%= match.match_data?.state || '전반' %></span>
        </div>
        
        <!-- 홈팀 라인업 -->
        <div class="lineup-container home">
            <div class="lineup-header home">
                <span><%= match.home_team %> 라인업</span>
            </div>
            <div class="lineup-list" id="home-lineup-list">
                <!-- 홈팀 선수 목록은 자바스크립트로 채워짐 -->
            </div>
        </div>
        
        <!-- 원정팀 라인업 -->
        <div class="lineup-container away">
            <div class="lineup-header away">
                <span><%= match.away_team %> 라인업</span>
            </div>
            <div class="lineup-list" id="away-lineup-list">
                <!-- 원정팀 선수 목록은 자바스크립트로 채워짐 -->
            </div>
        </div>

        <!-- 경기 정보 -->
        <div class="match-info">
            <div class="info-item">
                <div class="info-label">슈팅</div>
                <div class="info-value">
                    <span class="home-shots"><%= match.match_data?.home_shots || 0 %></span>
                    -
                    <span class="away-shots"><%= match.match_data?.away_shots || 0 %></span>
                </div>
            </div>
            <div class="info-item">
                <div class="info-label">유효슈팅</div>
                <div class="info-value">
                    <span class="home-shots-on-target"><%= match.match_data?.home_shots_on_target || 0 %></span>
                    -
                    <span class="away-shots-on-target"><%= match.match_data?.away_shots_on_target || 0 %></span>
                </div>
            </div>
            <div class="info-item">
                <div class="info-label">코너킥</div>
                <div class="info-value">
                    <span class="home-corners"><%= match.match_data?.home_corners || 0 %></span>
                    -
                    <span class="away-corners"><%= match.match_data?.away_corners || 0 %></span>
                </div>
            </div>
            <div class="info-item">
                <div class="info-label">파울</div>
                <div class="info-value">
                    <span class="home-fouls"><%= match.match_data?.home_fouls || 0 %></span>
                    -
                    <span class="away-fouls"><%= match.match_data?.away_fouls || 0 %></span>
                </div>
            </div>
        </div>
    </div>

    <script src="/js/animations.js"></script>
    <script>
        const socket = io();
        const matchId = '<%= match.id %>';
        let lastServerTime = 0;
        let lastUpdateTime = 0;
        let localTimer = null;
        let homeTeamColor = '<%= match.home_team_color || "#00cc33" %>';
        let awayTeamColor = '<%= match.away_team_color || "#00cc33" %>';

        // 전역 상태 관리 객체
        const logoState = {
            home: {
                path: '',
                bgColor: '#ffffff',
                teamName: '<%= match.home_team %>'
            },
            away: {
                path: '',
                bgColor: '#ffffff',
                teamName: '<%= match.away_team %>'
            }
        };

        // 로고 업데이트 함수
        function updateTeamLogo(teamType, logoInfo) {
            console.log(`${teamType}팀 로고 업데이트:`, logoInfo);
            
            const logoContainer = document.querySelector(`.team-section.${teamType} .team-logo`);
            if (logoContainer) {
                // 배경색 업데이트
                logoContainer.style.backgroundColor = logoInfo.bgColor;
                
                // 로고 이미지 업데이트
                if (logoInfo.path) {
                    const img = document.createElement('img');
                    img.src = logoInfo.path;
                    img.alt = `${teamType}팀 로고`;
                    img.style.width = '100%';
                    img.style.height = '100%';
                    img.style.objectFit = 'contain';
                    
                    img.onload = () => {
                        console.log(`${teamType}팀 로고 이미지 로드 완료:`, logoInfo.path);
                    };
                    
                    img.onerror = (error) => {
                        console.error(`${teamType}팀 로고 이미지 로드 실패:`, error);
                        logoContainer.innerHTML = `<div class="team-logo-placeholder"></div>`;
                    };
                    
                    logoContainer.innerHTML = '';
                    logoContainer.appendChild(img);
                } else {
                    logoContainer.innerHTML = `<div class="team-logo-placeholder"></div>`;
                }

                // 팀 섹션 배경색 업데이트
                const teamSection = document.querySelector(`.team-section.${teamType}`);
                if (teamSection) {
                    // HEX, rgb만 허용. rgba면 알파값 제거
                    let color = logoInfo.bgColor;
                    if (color.startsWith('rgba')) {
                        // rgba(174, 255, 0, 0.2) → rgb(174, 255, 0)
                        color = color.replace(/^rgba\(([^,]+),([^,]+),([^,]+),[^\)]+\)/, 'rgb($1,$2,$3)');
                    }
                    teamSection.style.backgroundColor = color;
                }

                // 팀 헤더 배경색 업데이트
                const teamHeader = document.querySelector(`.team-section.${teamType} .team-header`);
                if (teamHeader) {
                    let color = logoInfo.bgColor;
                    if (color.startsWith('rgba')) {
                        color = color.replace(/^rgba\(([^,]+),([^,]+),([^,]+),[^\)]+\)/, 'rgb($1,$2,$3)');
                    }
                    teamHeader.style.backgroundColor = color;
                }
            }
        }

        // 초기 로고 로드 함수
        async function loadInitialLogos() {
            try {
                console.log('초기 로고 정보 로드 시작');
                const response = await fetch('/api/team-logo-map/SOCCER');
                if (!response.ok) {
                    throw new Error(`팀 로고 맵 로드 실패: ${response.status}`);
                }
                
                const data = await response.json();
                console.log('팀 로고맵 로드 성공:', data);
                
                if (data && data.teamLogoMap) {
                    const homeTeamName = '<%= match.home_team %>';
                    const awayTeamName = '<%= match.away_team %>';
                    
                    // 홈팀 로고 설정
                    if (data.teamLogoMap[homeTeamName]) {
                        logoState.home = {
                            path: data.teamLogoMap[homeTeamName].path,
                            bgColor: data.teamLogoMap[homeTeamName].bgColor || '#ffffff',
                            teamName: homeTeamName
                        };
                        updateTeamLogo('home', logoState.home);
                    }
                    
                    // 원정팀 로고 설정
                    if (data.teamLogoMap[awayTeamName]) {
                        logoState.away = {
                            path: data.teamLogoMap[awayTeamName].path,
                            bgColor: data.teamLogoMap[awayTeamName].bgColor || '#ffffff',
                            teamName: awayTeamName
                        };
                        updateTeamLogo('away', logoState.away);
                    }
                }
            } catch (error) {
                console.error('팀 로고 정보 로드 중 오류 발생:', error);
            }
        }

        // 소켓 연결 이벤트
        socket.on('connect', () => {
            console.log('소켓 연결됨');
            socket.emit('join', matchId);
        });

        socket.on('disconnect', () => {
            console.log('서버 연결이 끊어짐');
            lastUpdateTime = Date.now();
            startLocalTimer();
        });

        // match_update 이벤트 처리
        socket.on('match_update', (data) => {
            if (data.matchId === matchId) {
                console.log('경기 정보 업데이트 수신:', data);
                
                // 점수 업데이트
                if (data.home_score !== undefined) {
                    const homeScoreElement = document.querySelector('.home-score');
                    if (homeScoreElement) {
                        homeScoreElement.textContent = data.home_score;
                        console.log('홈팀 점수 업데이트:', data.home_score);
                    }
                }
                if (data.away_score !== undefined) {
                    const awayScoreElement = document.querySelector('.away-score');
                    if (awayScoreElement) {
                        awayScoreElement.textContent = data.away_score;
                        console.log('원정팀 점수 업데이트:', data.away_score);
                    }
                }
                
                // 경기 상태 업데이트
                if (data.match_data && data.match_data.state) {
                    const stateElement = document.querySelector('.state-text');
                    if (stateElement) {
                        stateElement.textContent = data.match_data.state;
                    }
                }
            }
        });

        // 팀 로고 업데이트 이벤트 처리
        socket.on('teamLogoUpdated', function(data) {
            console.log('로고 업데이트 이벤트 수신:', data);
            
            if (data.matchId === matchId) {
                const teamType = data.teamType;
                
                // 현재 팀의 상태 업데이트
                logoState[teamType] = {
                    path: data.path || '',
                    bgColor: data.bgColor || '#ffffff',
                    teamName: data.teamName || (teamType === 'home' ? '<%= match.home_team %>' : '<%= match.away_team %>')
                };
                
                // UI 업데이트
                const logoContainer = document.querySelector(`.team-section.${teamType} .team-logo`);
                if (logoContainer) {
                    logoContainer.style.backgroundColor = logoState[teamType].bgColor;
                    if (logoState[teamType].path) {
                        logoContainer.innerHTML = `<img src="${logoState[teamType].path}" alt="${teamType}팀 로고">`;
                    } else {
                        logoContainer.innerHTML = '<div class="no-logo">로고 없음</div>';
                    }
                }
            }
        });

        // 팀 로고 삭제 이벤트 처리
        socket.on('teamLogoRemoved', function(data) {
            console.log('로고 삭제 이벤트 수신:', data);
            
            if (data.matchId === matchId) {
                const teamType = data.teamType;
                
                // 현재 팀의 상태 초기화
                logoState[teamType] = {
                    path: '',
                    bgColor: '#ffffff',
                    teamName: data.teamName || (teamType === 'home' ? '<%= match.home_team %>' : '<%= match.away_team %>')
                };
                
                // UI 업데이트
                updateTeamLogo(teamType, logoState[teamType]);
            }
        });

        // 단일 DOMContentLoaded 이벤트 리스너
        document.addEventListener('DOMContentLoaded', async function() {
            try {
                // 초기 로고 로드
                await loadInitialLogos();
                
                // 팀 색상 적용
                updateTeamColors(homeTeamColor, awayTeamColor);
                document.querySelectorAll('.team-name').forEach(function(el) {
                    if (el.textContent.trim().length > 8) {
                        el.classList.add('small-font');
                    } else {
                        el.classList.remove('small-font');
                    }
                });
            } catch (error) {
                console.error('초기화 중 오류 발생:', error);
                showError('초기화 중 오류가 발생했습니다.');
            }
        });

        // 서버로부터 팀 색상 변경 이벤트 수신 (teamColorChanged)
        socket.on('teamColorChanged', function(data) {
            if (data.matchId === matchId) {
                // 오버레이 페이지 팀 색상 즉시 업데이트
                homeTeamColor = data.homeColor;
                awayTeamColor = data.awayColor;
                updateTeamColors(homeTeamColor, awayTeamColor);
            }
        });
        
        // 단일 팀 색상 업데이트 이벤트 처리 (teamColorUpdate)
        socket.on('teamColorUpdate', function(data) {
            if (data.matchId === matchId) {
                const color = data.teamColor;
                if (data.teamType === 'home') {
                    homeTeamColor = color;
                    updateTeamColors(homeTeamColor, awayTeamColor);
                } else {
                    awayTeamColor = color;
                    updateTeamColors(homeTeamColor, awayTeamColor);
                }
            }
        });

        // 서버로부터 타이머 상태 수신
        socket.on('timer_state', (data) => {
            lastServerTime = data.currentSeconds;
            lastUpdateTime = data.lastUpdateTime || Date.now();
            updateTimerDisplay(data.currentSeconds);
            if (data.isRunning) {
                startLocalTimer();
            }
        });

        // 서버로부터 타이머 업데이트 수신
        socket.on('timer_update', (data) => {
            lastServerTime = data.currentSeconds;
            lastUpdateTime = data.lastUpdateTime || Date.now();
            updateTimerDisplay(data.currentSeconds);
            
            if (data.isRunning && !localTimer) {
                startLocalTimer();
            } else if (!data.isRunning && localTimer) {
                stopLocalTimer();
            }
        });

        // 애니메이션 이벤트 수신
        socket.on('animation', (data) => {
            const section = data.section;
            
            if (section === 'matchState' || section === 'all') {
                const matchState = document.querySelector('.match-state');
                const scoreboard = document.querySelector('.scoreboard');
                
                if (matchState) {
                    if (matchState.style.display === 'none') {
                        matchState.style.display = 'block';
                        matchState.classList.add('animate-fade');
                    } else {
                        matchState.classList.remove('animate-fade');
                        matchState.style.display = 'none';
                    }
                }
                
                if (scoreboard) {
                    if (scoreboard.style.display === 'none') {
                        scoreboard.style.display = 'flex';
                        scoreboard.classList.add('animate-slide');
                    } else {
                        scoreboard.classList.remove('animate-slide');
                        scoreboard.style.display = 'none';
                    }
                }
            }           
            
            if (section === 'homeTeam') {
                toggleLineupVisibility('home');
            }
            
            if (section === 'awayTeam') {
                toggleLineupVisibility('away');
            }
        });

        // 팀 헤더 변경 이벤트 처리
        socket.on('teamHeaderChanged', function(data) {
            if (data.matchId === matchId) {
                const homeTeamHeader = document.querySelector('.team-section.home .team-header');
                const awayTeamHeader = document.querySelector('.team-section.away .team-header');
                
                if (homeTeamHeader) homeTeamHeader.textContent = data.homeHeader;
                if (awayTeamHeader) awayTeamHeader.textContent = data.awayHeader;
            }
        });

        // 로컬 타이머 시작
        function startLocalTimer() {
            if (localTimer) return;
            
            localTimer = setInterval(() => {
                if (!socket.connected) {
                    const currentTime = Date.now();
                    const timeDiff = Math.floor((currentTime - lastUpdateTime) / 1000);
                    const newSeconds = lastServerTime + timeDiff;
                    updateTimerDisplay(newSeconds);
                }
            }, 1000);
        }

        // 로컬 타이머 정지
        function stopLocalTimer() {
            if (localTimer) {
                clearInterval(localTimer);
                localTimer = null;
            }
        }

        // 타이머 표시 업데이트
        function updateTimerDisplay(currentSeconds) {
            const minutes = Math.floor(currentSeconds / 60);
            const seconds = currentSeconds % 60;
            document.querySelector('.match-time').textContent = 
                `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        }

        // 팀 색상 업데이트 함수
        function updateTeamColors(homeColor, awayColor) {
            const homeSection = document.querySelector('.team-section.home');
            const awaySection = document.querySelector('.team-section.away');
            const homeHeader = document.querySelector('.home .team-header');
            const awayHeader = document.querySelector('.away .team-header');
            
            if (homeSection) {
                homeSection.style.backgroundColor = homeColor; // 완전 불투명
            }
            if (awaySection) {
                awaySection.style.backgroundColor = awayColor;
            }
            if (homeHeader) {
                homeHeader.style.backgroundColor = homeColor;
            }
            if (awayHeader) {
                awayHeader.style.backgroundColor = awayColor;
            }
            
            // 라인업 헤더 색상도 업데이트
            const homeLineupHeader = document.querySelector('.lineup-header.home');
            const awayLineupHeader = document.querySelector('.lineup-header.away');
            const homeLineupBorder = document.querySelector('.lineup-container.home');
            const awayLineupBorder = document.querySelector('.lineup-container.away');
            const homePlayerNumbers = document.querySelectorAll('.home .player-number');
            const awayPlayerNumbers = document.querySelectorAll('.away .player-number');
            
            if (homeLineupHeader) {
                homeLineupHeader.style.backgroundColor = homeColor;
            }
            if (awayLineupHeader) {
                awayLineupHeader.style.backgroundColor = awayColor;
            }
            if (homeLineupBorder) {
                homeLineupBorder.style.borderLeftColor = homeColor;
            }
            if (awayLineupBorder) {
                awayLineupBorder.style.borderLeftColor = awayColor;
            }
            
            homePlayerNumbers.forEach(num => {
                num.style.backgroundColor = homeColor;
            });
            
            awayPlayerNumbers.forEach(num => {
                num.style.backgroundColor = awayColor;
            });
        }
        
        // 라인업 데이터 로드 함수
        async function loadLineupData() {
            try {
                const response = await fetch(`/api/load-lineup/${matchId}`);
                const data = await response.json();
                
                if (data.success && data.lineup) {
                    // 홈팀 라인업 표시
                    const homeLineupList = document.getElementById('home-lineup-list');
                    homeLineupList.innerHTML = ''; // 기존 목록 초기화
                    
                    if (data.lineup.home) {
                        // 골키퍼 표시
                        if (data.lineup.home.goalkeeper) {
                            const gk = data.lineup.home.goalkeeper;
                            const playerElement = createPlayerElement(gk, 'home', true);
                            homeLineupList.appendChild(playerElement);
                        }
                        
                        // 필드 선수 표시
                        if (data.lineup.home.players && data.lineup.home.players.length > 0) {
                            data.lineup.home.players.forEach(player => {
                                const playerElement = createPlayerElement(player, 'home', false);
                                homeLineupList.appendChild(playerElement);
                            });
                        }
                    }
                    
                    // 어웨이팀 라인업 표시
                    const awayLineupList = document.getElementById('away-lineup-list');
                    awayLineupList.innerHTML = ''; // 기존 목록 초기화
                    
                    if (data.lineup.away) {
                        // 골키퍼 표시
                        if (data.lineup.away.goalkeeper) {
                            const gk = data.lineup.away.goalkeeper;
                            const playerElement = createPlayerElement(gk, 'away', true);
                            awayLineupList.appendChild(playerElement);
                        }
                        
                        // 필드 선수 표시
                        if (data.lineup.away.players && data.lineup.away.players.length > 0) {
                            data.lineup.away.players.forEach(player => {
                                const playerElement = createPlayerElement(player, 'away', false);
                                awayLineupList.appendChild(playerElement);
                            });
                        }
                    }
                }
            } catch (error) {
                console.error('라인업 데이터 로드 중 오류 발생:', error);
            }
        }
        
        // 선수 요소 생성 함수
        function createPlayerElement(player, team, isGoalkeeper) {
            const playerElement = document.createElement('div');
            playerElement.className = `lineup-player ${team}`;
            
            const numberElement = document.createElement('div');
            numberElement.className = 'player-number';
            numberElement.textContent = player.number;
            numberElement.style.fontSize = '14px'; // 인라인 스타일로 폰트 크기 강제 지정
            
            const nameElement = document.createElement('span');
            nameElement.className = 'player-name';
            nameElement.textContent = player.name;
            
            const positionElement = document.createElement('span');
            positionElement.className = 'player-position';
            positionElement.textContent = player.position;
            
            // 골키퍼인 경우 라벨 추가
            let gkLabel = null;
            
            // 모든 요소를 한 줄로 배치
            playerElement.appendChild(numberElement);
            playerElement.appendChild(nameElement);
            playerElement.appendChild(positionElement);
            if (gkLabel) playerElement.appendChild(gkLabel);
            
            return playerElement;
        }
        
        // 라인업 표시/숨김 토글 함수
        function toggleLineupVisibility(team) {
            const lineupContainer = document.querySelector(`.lineup-container.${team}`);
            if (lineupContainer) {
                if (lineupContainer.classList.contains('visible')) {
                    lineupContainer.classList.remove('visible');
                } else {
                    lineupContainer.classList.add('visible');
                }
            }
        }
    </script>
</body>
</html> 