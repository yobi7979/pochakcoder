<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>배구 경기 컨트롤 패널</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <script src="/socket.io/socket.io.js"></script>
    <style>
        :root {
            --primary-color: #007bff;
            --secondary-color: #6c757d;
            --success-color: #28a745;
            --danger-color: #dc3545;
            --warning-color: #ffc107;
            --light-color: #f8f9fa;
            --dark-color: #343a40;
            --volleyball-orange: #ff6b35;
        }
        
        body {
            background-color: var(--light-color);
            padding: 10px;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .control-panel {
            max-width: 1400px;
            margin: 0 auto;
            background-color: white;
            padding: 15px;
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        
        .panel-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .panel-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0;
            color: var(--volleyball-orange);
        }
        
        .tournament-section {
            background-color: var(--light-color);
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 15px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }
        
        .tournament-input {
            width: 100%;
            padding: 10px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 600;
        }
        
        .team-section {
            background-color: var(--light-color);
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 15px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }
        
        .team-name {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: var(--dark-color);
        }
        
        .score-section {
            margin: 15px 0;
        }
        
        .score-input-group {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .score-input {
            width: 80px;
            height: 40px;
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            border-radius: 8px;
            border: 2px solid #ddd;
            padding: 5px;
        }
        
        .score-controls {
            display: flex;
            gap: 5px;
        }
        
        .score-btn {
            width: 40px;
            height: 40px;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            font-size: 20px;
        }
        
        .score-btn i {
            font-size: 20px;
        }
        
        .team-color-picker {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            gap: 8px;
        }
        
        .team-color-picker label {
            font-size: 0.9rem;
            margin-bottom: 0;
        }
        
        .team-color-picker input[type="color"] {
            width: 40px;
            height: 30px;
            padding: 0;
            border: 1px solid #adadad;
            border-radius: 4px;
            cursor: pointer;
        }
        
        .team-color-picker .save-team-color {
            padding: 2px 8px;
            font-size: 0.8rem;
        }
        
        .team-logo-upload {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .team-logo-preview {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            overflow: hidden;
            background-color: #c5c5c5;
        }
        
        .team-logo-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .team-logo-input {
            display: none;
        }
        
        .upload-logo-btn {
            padding: 2px 8px;
            font-size: 0.8rem;
        }
        
        .game-status-section {
            background-color: var(--light-color);
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 15px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }
        
        .status-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 15px;
            color: var(--dark-color);
        }
        
        .current-set-controls {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .set-nav-btn {
            padding: 8px 16px;
            font-size: 1rem;
            border-radius: 6px;
            font-weight: bold;
        }
        
                 .current-set-display {
             font-size: 1.2rem;
             font-weight: bold;
             color: var(--volleyball-orange);
             padding: 8px 16px;
             background-color: white;
             border-radius: 8px;
             border: 2px solid var(--volleyball-orange);
         }
        
        .sets-summary {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin: 15px 0;
        }
        
        .set-summary-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 5px;
        }
        
        .set-summary-score {
            font-size: 1rem;
            font-weight: bold;
            padding: 3px 8px;
            background-color: white;
            border-radius: 4px;
            border: 1px solid #ddd;
        }
        
        .set-summary-winner {
            background-color: var(--success-color);
            color: white;
        }
        
        .timeout-section {
            background-color: var(--light-color);
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 15px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }
        
        .timeout-display {
            display: flex;
            justify-content: space-around;
            margin: 15px 0;
        }
        
        .timeout-team {
            text-align: center;
        }
        
        .timeout-count {
            font-size: 1.5rem;
            font-weight: bold;
            color: var(--danger-color);
        }
        
        .timeout-controls {
            display: flex;
            justify-content: space-around;
            gap: 10px;
        }
        
        .timer-section {
            background-color: var(--light-color);
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 15px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }
        
        .timer-display {
            font-size: 2rem;
            font-weight: bold;
            text-align: center;
            margin: 10px 0;
            color: var(--dark-color);
        }
        
        .timer-controls {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 15px;
        }
        
        .timer-btn {
            padding: 8px 16px;
            font-size: 0.9rem;
            border-radius: 6px;
        }
        
        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }
        
        .action-btn {
            padding: 10px 20px;
            font-size: 1rem;
            border-radius: 8px;
        }
        
        .btn-primary {
            background-color: var(--volleyball-orange);
            border-color: var(--volleyball-orange);
        }
        
        .btn-primary:hover {
            background-color: #e55a2b;
            border-color: #e55a2b;
        }
    </style>
</head>
<body>
    <div class="control-panel">
        <div class="panel-header">
            <h1 class="panel-title">
                <i class="bi bi-volleyball"></i> 배구 경기 컨트롤 패널
            </h1>
            <div class="action-buttons">
                <button class="btn btn-outline-primary action-btn" onclick="saveMatch()">
                    <i class="bi bi-save"></i> 저장
                </button>
            </div>
        </div>

        <!-- 대회명 입력 섹션 -->
        <div class="tournament-section">
            <div class="status-title">대회명</div>
            <input type="text" class="tournament-input" id="tournamentName" 
                   value="<%= match.round || '배구 대회' %>" 
                   placeholder="대회명을 입력하세요"
                   onchange="updateTournamentName()">
        </div>

        <!-- 팀 정보 섹션 -->
        <div class="row">
            <div class="col-md-6">
                <div class="team-section">
                    <div class="team-name">홈팀</div>
                    <div class="team-color-picker">
                        <label>팀 색상:</label>
                        <input type="color" id="homeTeamColor" value="<%= match.home_team_color || '#1e40af' %>">
                        <button class="btn btn-sm btn-outline-primary save-team-color" onclick="saveTeamColor('home')">저장</button>
                    </div>
                    <div class="team-logo-upload">
                        <div class="team-logo-preview">
                            <img id="homeTeamLogo" src="<%= match.home_team_logo || '/TEAMLOGO/VOLLEYBALL/default.png' %>" alt="홈팀 로고">
                        </div>
                        <input type="file" id="homeTeamLogoInput" class="team-logo-input" accept="image/*">
                        <button class="btn btn-sm btn-outline-secondary upload-logo-btn" onclick="document.getElementById('homeTeamLogoInput').click()">로고 업로드</button>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="team-section">
                    <div class="team-name">원정팀</div>
                    <div class="team-color-picker">
                        <label>팀 색상:</label>
                        <input type="color" id="awayTeamColor" value="<%= match.away_team_color || '#1e40af' %>">
                        <button class="btn btn-sm btn-outline-primary save-team-color" onclick="saveTeamColor('away')">저장</button>
                    </div>
                    <div class="team-logo-upload">
                        <div class="team-logo-preview">
                            <img id="awayTeamLogo" src="<%= match.away_team_logo || '/TEAMLOGO/VOLLEYBALL/default.png' %>" alt="원정팀 로고">
                        </div>
                        <input type="file" id="awayTeamLogoInput" class="team-logo-input" accept="image/*">
                        <button class="btn btn-sm btn-outline-secondary upload-logo-btn" onclick="document.getElementById('awayTeamLogoInput').click()">로고 업로드</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- 현재 세트 점수 섹션 -->
        <div class="game-status-section">
            <div class="status-title">현재 세트 점수</div>
            
            <!-- 세트 네비게이션 -->
            <div class="current-set-controls">
                <button class="btn btn-outline-secondary set-nav-btn" onclick="previousSet()">
                    <i class="bi bi-chevron-left"></i> 이전 세트
                </button>
                                 <div class="current-set-display">
                     <i class="bi bi-1-circle"></i> <%= match.match_data.current_set || 1 %> 세트
                 </div>
                 <button class="btn btn-outline-secondary set-nav-btn" onclick="nextSet()">
                     다음 세트 <i class="bi bi-chevron-right"></i>
                 </button>
             </div>
             
             <!-- 서브권 변경 버튼 -->
             <div class="text-center mt-2">
                 <button class="btn btn-outline-warning btn-sm" onclick="toggleServing()">
                     <i class="bi bi-arrow-left-right"></i> 서브권 변경
                 </button>
             </div>
            </div>
            
            <div class="row">
                <div class="col-md-4">
                    <div class="team-section">
                        <div class="team-name"><%= match.home_team %></div>
                        <div class="score-section">
                            <div class="score-input-group">
                                <input type="number" id="homeScore" class="score-input" value="<%= match.match_data.home_score || 0 %>" min="0" max="50">
                                <div class="score-controls">
                                    <button class="btn btn-success score-btn" onclick="adjustScore('home', 1)">
                                        <i class="bi bi-plus"></i>
                                    </button>
                                    <button class="btn btn-danger score-btn" onclick="adjustScore('home', -1)">
                                        <i class="bi bi-dash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="text-center">
                        <div class="sets-summary">
                            <% for(let i = 1; i <= 5; i++) { %>
                                <div class="set-summary-item">
                                    <div class="set-number"><%= i %>세트</div>
                                    <div class="set-summary-score <%= match.match_data.set_scores && match.match_data.set_scores[i] && match.match_data.set_scores[i].winner ? 'set-summary-winner' : '' %>">
                                        <%= match.match_data.set_scores && match.match_data.set_scores[i] ? `${match.match_data.set_scores[i].home}-${match.match_data.set_scores[i].away}` : '0-0' %>
                                    </div>
                                </div>
                            <% } %>
                        </div>
                        <div class="mt-3">
                            <button class="btn btn-outline-primary" onclick="swapTeams()">
                                <i class="bi bi-arrow-left-right"></i> 팀 위치 변경
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="team-section">
                        <div class="team-name"><%= match.away_team %></div>
                        <div class="score-section">
                            <div class="score-input-group">
                                <input type="number" id="awayScore" class="score-input" value="<%= match.match_data.away_score || 0 %>" min="0" max="50">
                                <div class="score-controls">
                                    <button class="btn btn-success score-btn" onclick="adjustScore('away', 1)">
                                        <i class="bi bi-plus"></i>
                                    </button>
                                    <button class="btn btn-danger score-btn" onclick="adjustScore('away', -1)">
                                        <i class="bi bi-dash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 타임아웃 섹션 -->
        <div class="timeout-section">
            <div class="status-title">타임아웃 관리</div>
            <div class="timeout-display">
                <div class="timeout-team">
                    <div class="team-name"><%= match.home_team %></div>
                    <div class="timeout-count" id="homeTimeouts"><%= match.match_data.home_timeouts || 0 %>/2</div>
                </div>
                <div class="timeout-team">
                    <div class="team-name"><%= match.away_team %></div>
                    <div class="timeout-count" id="awayTimeouts"><%= match.match_data.away_timeouts || 0 %>/2</div>
                </div>
            </div>
            <div class="timeout-controls">
                <div class="btn-group">
                    <button class="btn btn-warning" onclick="adjustTimeout('home', 1)">홈팀 타임아웃 +</button>
                    <button class="btn btn-warning" onclick="adjustTimeout('home', -1)">홈팀 타임아웃 -</button>
                </div>
                <div class="btn-group">
                    <button class="btn btn-warning" onclick="adjustTimeout('away', 1)">원정팀 타임아웃 +</button>
                    <button class="btn btn-warning" onclick="adjustTimeout('away', -1)">원정팀 타임아웃 -</button>
                </div>
            </div>
        </div>

        <!-- 타이머 섹션 (최하단) -->
        <div class="timer-section">
            <div class="status-title">경기 타이머</div>
            <div class="timer-display" id="timerDisplay">
                <%= formatTime(match.match_data.timer || 0) %>
            </div>
            <div class="timer-controls">
                <button class="btn btn-success timer-btn" onclick="startTimer()">
                    <i class="bi bi-play"></i> 시작
                </button>
                <button class="btn btn-warning timer-btn" onclick="pauseTimer()">
                    <i class="bi bi-pause"></i> 일시정지
                </button>
                <button class="btn btn-danger timer-btn" onclick="resetTimer()">
                    <i class="bi bi-stop"></i> 리셋
                </button>
            </div>
        </div>
    </div>

    <script>
        const socket = io();
        const matchId = '<%= match.id %>';
        let timerInterval;
        
        // Socket.IO 룸에 조인
        socket.emit('joinMatch', { matchId: matchId });

        // 대회명 업데이트
        function updateTournamentName() {
            const tournamentName = document.getElementById('tournamentName').value;
            socket.emit('updateTournamentName', {
                matchId: matchId,
                tournamentName: tournamentName
            });
        }

        // 점수 조정
        function adjustScore(team, amount) {
            const scoreInput = document.getElementById(team === 'home' ? 'homeScore' : 'awayScore');
            const currentScore = parseInt(scoreInput.value) || 0;
            const newScore = Math.max(0, currentScore + amount);
            scoreInput.value = newScore;
            
            updateScore(team, newScore, amount > 0); // amount > 0이면 점수 증가
        }

        // 서브권 변경 디바운싱을 위한 변수
        let servingUpdateTimeout = null;

        // 점수 업데이트
        function updateScore(team, score, isIncrease = false) {
            const data = {
                matchId: matchId,
                team: team,
                score: score
            };
            
            socket.emit('updateVolleyballScore', data);
            
            // 점수 증가 시에만 서브권 자동 변경 (디바운싱 적용)
            if (isIncrease) {
                // 이전 타이머가 있다면 취소
                if (servingUpdateTimeout) {
                    clearTimeout(servingUpdateTimeout);
                }
                
                // 50ms 후에 서브권 업데이트 실행
                servingUpdateTimeout = setTimeout(() => {
                    const homeScore = parseInt(document.getElementById('homeScore').value) || 0;
                    const awayScore = parseInt(document.getElementById('awayScore').value) || 0;
                    
                    // 서브권 자동 변경 (왼쪽/오른쪽 팀 개념)
                    let currentServing;
                    if (homeScore > awayScore) {
                        currentServing = 'left'; // 왼쪽 팀(홈팀)이 더 높으면 왼쪽 팀 서브
                    } else if (awayScore > homeScore) {
                        currentServing = 'right'; // 오른쪽 팀(원정팀)이 더 높으면 오른쪽 팀 서브
                    } else {
                        // 점수가 같으면 이전 서브권 유지
                        const prevServing = '<%= match.match_data.serving_team || 'home' %>';
                        currentServing = prevServing === 'home' ? 'left' : 'right';
                    }
                    socket.emit('updateVolleyballServing', {
                        matchId: matchId,
                        servingTeam: currentServing
                    });
                }, 50);
            }
        }

        // 다음 세트
        function nextSet() {
            const currentSet = <%= match.match_data.current_set || 1 %>;
            if (currentSet < 5) {
                socket.emit('updateVolleyballCurrentSet', {
                    matchId: matchId,
                    currentSet: currentSet + 1
                });
                location.reload();
            }
        }

        // 이전 세트
        function previousSet() {
            const currentSet = <%= match.match_data.current_set || 1 %>;
            if (currentSet > 1) {
                socket.emit('updateVolleyballCurrentSet', {
                    matchId: matchId,
                    currentSet: currentSet - 1
                });
                location.reload();
            }
        }

        // 타임아웃 조정
        function adjustTimeout(team, amount) {
            const timeoutDisplay = document.getElementById(team === 'home' ? 'homeTimeouts' : 'awayTimeouts');
            const currentTimeouts = parseInt(timeoutDisplay.textContent.split('/')[0]) || 0;
            const newTimeouts = Math.max(0, Math.min(2, currentTimeouts + amount));
            timeoutDisplay.textContent = `${newTimeouts}/2`;
            
            const data = {
                matchId: matchId,
                team: team,
                timeouts: newTimeouts
            };
            
            socket.emit('updateVolleyballTimeouts', data);
        }

        // 타이머 시작
        function startTimer() {
            if (!timerInterval) {
                timerInterval = setInterval(() => {
                    const timerDisplay = document.getElementById('timerDisplay');
                    const currentTime = parseInt(timerDisplay.dataset.time || 0);
                    const newTime = currentTime + 1;
                    timerDisplay.dataset.time = newTime;
                    timerDisplay.textContent = formatTime(newTime);
                    
                    socket.emit('updateVolleyballTimer', {
                        matchId: matchId,
                        timer: newTime
                    });
                }, 1000);
            }
        }

        // 타이머 일시정지
        function pauseTimer() {
            if (timerInterval) {
                clearInterval(timerInterval);
                timerInterval = null;
            }
        }

        // 타이머 리셋
        function resetTimer() {
            pauseTimer();
            const timerDisplay = document.getElementById('timerDisplay');
            timerDisplay.dataset.time = 0;
            timerDisplay.textContent = formatTime(0);
            
            socket.emit('updateVolleyballTimer', {
                matchId: matchId,
                timer: 0
            });
        }

        // 시간 포맷팅
        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const remainingSeconds = seconds % 60;
            return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
        }

        // 팀 색상 저장
        function saveTeamColor(team) {
            const color = document.getElementById(team === 'home' ? 'homeTeamColor' : 'awayTeamColor').value;
            socket.emit('updateTeamColor', {
                matchId: matchId,
                team: team,
                color: color
            });
        }

        // 경기 저장
        function saveMatch() {
            socket.emit('saveMatch', { matchId: matchId });
            alert('경기가 저장되었습니다.');
        }

                 // 팀 위치 변경
         function swapTeams() {
             if (confirm('팀 위치를 변경하시겠습니까?')) {
                 socket.emit('swapTeams', { matchId: matchId });
             }
         }
         
         // 서브권 변경
         function toggleServing() {
             const currentServing = '<%= match.match_data.serving_team || 'home' %>';
             const newServing = currentServing === 'home' ? 'away' : 'home';
             socket.emit('updateVolleyballServing', {
                 matchId: matchId,
                 servingTeam: newServing
             });
         }

        // 로고 업로드 처리
        document.getElementById('homeTeamLogoInput').addEventListener('change', function(e) {
            handleLogoUpload(e, 'home');
        });

        document.getElementById('awayTeamLogoInput').addEventListener('change', function(e) {
            handleLogoUpload(e, 'away');
        });

        function handleLogoUpload(event, team) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const logoImg = document.getElementById(team === 'home' ? 'homeTeamLogo' : 'awayTeamLogo');
                    logoImg.src = e.target.result;
                    
                    // 서버에 로고 업로드
                    const formData = new FormData();
                    formData.append('logo', file);
                    formData.append('team', team);
                    formData.append('matchId', matchId);
                    
                    fetch('/upload-team-logo', {
                        method: 'POST',
                        body: formData
                    });
                };
                reader.readAsDataURL(file);
            }
        }

        // 소켓 이벤트 리스너
        socket.on('volleyballScoreUpdated', function(data) {
            if (data.matchId === matchId) {
                document.getElementById(data.team === 'home' ? 'homeScore' : 'awayScore').value = data.score;
            }
        });

        socket.on('volleyballTimeoutsUpdated', function(data) {
            if (data.matchId === matchId) {
                document.getElementById(data.team === 'home' ? 'homeTimeouts' : 'awayTimeouts').textContent = `${data.timeouts}/2`;
            }
        });

        // 팀 위치 변경 이벤트
        socket.on('teamsSwapped', function(data) {
            if (data.matchId === matchId) {
                // 페이지 새로고침으로 변경사항 반영
                location.reload();
            }
        });

        // 페이지 로드 시 초기화
        document.addEventListener('DOMContentLoaded', function() {
            const timerDisplay = document.getElementById('timerDisplay');
            timerDisplay.dataset.time = '<%= match.match_data.timer || 0 %>';
        });
    </script>
</body>
</html>
