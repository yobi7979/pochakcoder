<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>새 종목 추가</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            padding: 20px;
        }
        .form-container {
            max-width: 600px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h1 class="mb-4">새 종목 추가</h1>
        
        <div class="alert alert-danger" id="errorAlert" role="alert" style="display: none;"></div>
        
        <form id="sportForm">
            <div class="mb-3">
                <label for="name" class="form-label">종목 이름</label>
                <input type="text" class="form-control" id="name" name="name" required>
            </div>
            
            <div class="mt-4">
                <button type="submit" class="btn btn-primary">종목 추가</button>
                <a href="/sports" class="btn btn-secondary">취소</a>
            </div>
        </form>
    </div>

    <script>
        document.getElementById('sportForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const name = document.getElementById('name').value;
            const errorAlert = document.getElementById('errorAlert');
            
            try {
                const response = await fetch('/api/sport', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        name: name,
                        code: name.toUpperCase().substring(0, 2), // 이름의 첫 두 글자를 코드로 사용
                        template: 'default' // 기본 템플릿 사용
                    })
                });

                if (response.ok) {
                    window.location.href = '/sports';
                } else {
                    const data = await response.json();
                    errorAlert.textContent = data.error || '종목 추가에 실패했습니다.';
                    errorAlert.style.display = 'block';
                }
            } catch (error) {
                errorAlert.textContent = '서버 오류가 발생했습니다.';
                errorAlert.style.display = 'block';
            }
        });
    </script>
</body>
</html> 