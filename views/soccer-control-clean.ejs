<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>축구 경기 컨트롤 - <%= match.home_team %> vs <%= match.away_team %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <style>
        .control-panel {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .control-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            margin-bottom: 20px;
            overflow: hidden;
        }
        
        .control-header {
            background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
            color: white;
            padding: 20px;
            text-align: center;
        }
        
        .control-body {
            padding: 30px;
        }
        
        .team-section {
            background: #f8fafc;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            border: 2px solid #e2e8f0;
        }
        
        .team-header {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 15px;
            color: #2d3748;
        }
        
        .score-control {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .score-display {
            font-size: 2rem;
            font-weight: bold;
            min-width: 60px;
            text-align: center;
            background: #4f46e5;
            color: white;
            border-radius: 10px;
            padding: 10px;
        }
        
        .score-btn {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: none;
            font-size: 1.5rem;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .score-btn:hover {
            transform: scale(1.1);
        }
        
        .score-btn.plus {
            background: #10b981;
            color: white;
        }
        
        .score-btn.minus {
            background: #ef4444;
            color: white;
        }
        
        .team-name-input {
            width: 100%;
            padding: 10px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1rem;
            margin-bottom: 10px;
        }
        
        .team-color-section {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 15px;
        }
        
        .team-color-input {
            width: 50px;
            height: 40px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
        }
        
        .save-btn {
            background: #4f46e5;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease;
        }
        
        .save-btn:hover {
            background: #3730a3;
            transform: translateY(-2px);
        }
        
        .timer-section {
            background: #1e293b;
            color: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .timer-display {
            font-size: 3rem;
            font-weight: bold;
            text-align: center;
            margin-bottom: 20px;
            font-family: 'Courier New', monospace;
        }
        
        .timer-controls {
            display: flex;
            gap: 10px;
            justify-content: center;
        }
        
        .timer-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .timer-btn.start {
            background: #10b981;
            color: white;
        }
        
        .timer-btn.stop {
            background: #ef4444;
            color: white;
        }
        
        .timer-btn.reset {
            background: #6b7280;
            color: white;
        }
        
        .url-section {
            background: #f1f5f9;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .url-input {
            width: 100%;
            padding: 10px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            margin-bottom: 10px;
        }
        
        .copy-btn {
            background: #059669;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease;
        }
        
        .copy-btn:hover {
            background: #047857;
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
    <div class="control-panel">
        <div class="container">
            <!-- 헤더 -->
            <div class="control-card">
                <div class="control-header">
                    <h1><i class="fas fa-futbol"></i> 축구 경기 컨트롤</h1>
                    <p><%= match.home_team %> vs <%= match.away_team %></p>
                </div>
            </div>

            <!-- 타이머 섹션 -->
            <div class="control-card">
                <div class="control-body">
                    <div class="timer-section">
                        <div class="timer-display" id="timer-display">00:00</div>
                        <div class="timer-controls">
                            <button class="timer-btn start" onclick="startTimer()">
                                <i class="fas fa-play"></i> 시작
                            </button>
                            <button class="timer-btn stop" onclick="stopTimer()">
                                <i class="fas fa-pause"></i> 정지
                            </button>
                            <button class="timer-btn reset" onclick="resetTimer()">
                                <i class="fas fa-redo"></i> 리셋
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 홈팀 섹션 -->
            <div class="control-card">
                <div class="control-body">
                    <div class="team-section">
                        <div class="team-header">
                            <i class="fas fa-home"></i> 홈팀
                        </div>
                        
                        <!-- 팀명 수정 -->
                        <input type="text" id="home-team-name" class="team-name-input" value="<%= match.home_team %>" placeholder="홈팀 이름">
                        
                        <!-- 팀 컬러 -->
                        <div class="team-color-section">
                            <label>팀 컬러:</label>
                            <input type="color" id="home-team-color" class="team-color-input" value="<%= match.home_team_color || '#1e40af' %>">
                            <button class="save-btn" onclick="saveTeamColor('home')">
                                <i class="fas fa-save"></i> 저장
                            </button>
                        </div>
                        
                        <!-- 점수 컨트롤 -->
                        <div class="score-control">
                            <button class="score-btn minus" onclick="updateScore('home', -1)">-</button>
                            <div class="score-display" id="home-score">0</div>
                            <button class="score-btn plus" onclick="updateScore('home', 1)">+</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 어웨이팀 섹션 -->
            <div class="control-card">
                <div class="control-body">
                    <div class="team-section">
                        <div class="team-header">
                            <i class="fas fa-plane"></i> 어웨이팀
                        </div>
                        
                        <!-- 팀명 수정 -->
                        <input type="text" id="away-team-name" class="team-name-input" value="<%= match.away_team %>" placeholder="어웨이팀 이름">
                        
                        <!-- 팀 컬러 -->
                        <div class="team-color-section">
                            <label>팀 컬러:</label>
                            <input type="color" id="away-team-color" class="team-color-input" value="<%= match.away_team_color || '#1e40af' %>">
                            <button class="save-btn" onclick="saveTeamColor('away')">
                                <i class="fas fa-save"></i> 저장
                            </button>
                        </div>
                        
                        <!-- 점수 컨트롤 -->
                        <div class="score-control">
                            <button class="score-btn minus" onclick="updateScore('away', -1)">-</button>
                            <div class="score-display" id="away-score">0</div>
                            <button class="score-btn plus" onclick="updateScore('away', 1)">+</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- URL 복사 섹션 -->
            <div class="control-card">
                <div class="control-body">
                    <div class="url-section">
                        <h5><i class="fas fa-link"></i> URL 복사</h5>
                        
                        <div class="mb-3">
                            <label class="form-label">모바일 컨트롤 URL:</label>
                            <input type="text" id="mobile-url" class="url-input" readonly>
                            <button class="copy-btn" onclick="copyMobileUrl()">
                                <i class="fas fa-copy"></i> 복사
                            </button>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">오버레이 URL:</label>
                            <input type="text" id="overlay-url" class="url-input" readonly>
                            <button class="copy-btn" onclick="copyOverlayUrl()">
                                <i class="fas fa-copy"></i> 복사
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Socket.IO -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
        // 전역 변수
        const matchId = '<%= match.id %>';
        const socket = io();
        
        // 타이머 상태
        let timerState = {
            isRunning: false,
            currentSeconds: 0,
            startTime: null,
            pausedTime: 0
        };

        // 소켓 연결
        socket.on('connect', function() {
            console.log('소켓 연결됨');
            socket.emit('join_match', { matchId: matchId });
        });

        // 타이머 시작
        function startTimer() {
            if (!timerState.isRunning) {
                timerState.isRunning = true;
                timerState.startTime = Date.now();
                socket.emit('timer_start', { matchId: matchId });
                console.log('타이머 시작');
            }
        }

        // 타이머 정지
        function stopTimer() {
            if (timerState.isRunning) {
                timerState.isRunning = false;
                timerState.pausedTime = timerState.currentSeconds;
                socket.emit('timer_stop', { matchId: matchId });
                console.log('타이머 정지');
            }
        }

        // 타이머 리셋
        function resetTimer() {
            timerState.isRunning = false;
            timerState.currentSeconds = 0;
            timerState.startTime = null;
            timerState.pausedTime = 0;
            socket.emit('timer_reset', { matchId: matchId });
            updateTimerDisplay();
            console.log('타이머 리셋');
        }

        // 타이머 디스플레이 업데이트
        function updateTimerDisplay() {
            const minutes = Math.floor(timerState.currentSeconds / 60);
            const seconds = timerState.currentSeconds % 60;
            document.getElementById('timer-display').textContent = 
                `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        }

        // 타이머 업데이트 루프
        setInterval(() => {
            if (timerState.isRunning) {
                const currentTime = Date.now();
                const elapsedTime = Math.floor((currentTime - timerState.startTime) / 1000);
                timerState.currentSeconds = timerState.pausedTime + elapsedTime;
                updateTimerDisplay();
            }
        }, 1000);

        // 점수 업데이트
        function updateScore(team, change) {
            const scoreElement = document.getElementById(`${team}-score`);
            const currentScore = parseInt(scoreElement.textContent) || 0;
            const newScore = Math.max(0, currentScore + change);
            
            scoreElement.textContent = newScore;
            
            // 서버에 점수 업데이트 전송
            socket.emit('score_update', {
                matchId: matchId,
                team: team,
                score: newScore
            });
            
            console.log(`${team}팀 점수: ${newScore}`);
        }

        // 팀명 업데이트
        function updateTeamName(team) {
            const nameInput = document.getElementById(`${team}-team-name`);
            const newName = nameInput.value;
            
            socket.emit('team_name_update', {
                matchId: matchId,
                team: team,
                name: newName
            });
            
            console.log(`${team}팀 이름: ${newName}`);
        }

        // 팀 컬러 저장
        function saveTeamColor(team) {
            const colorInput = document.getElementById(`${team}-team-color`);
            const color = colorInput.value;
            
            socket.emit('team_color_update', {
                matchId: matchId,
                team: team,
                color: color
            });
            
            console.log(`${team}팀 컬러: ${color}`);
        }

        // URL 복사 함수들
        function copyMobileUrl() {
            const input = document.getElementById('mobile-url');
            input.select();
            document.execCommand('copy');
            alert('모바일 URL이 복사되었습니다.');
        }

        function copyOverlayUrl() {
            const input = document.getElementById('overlay-url');
            input.select();
            document.execCommand('copy');
            alert('오버레이 URL이 복사되었습니다.');
        }

        // 페이지 로드 시 URL 설정
        document.addEventListener('DOMContentLoaded', function() {
            const baseUrl = window.location.origin;
            document.getElementById('mobile-url').value = `${baseUrl}/soccer-control-mobile/${matchId}`;
            document.getElementById('overlay-url').value = `${baseUrl}/soccer/${matchId}/overlay`;
        });

        // 소켓 이벤트 리스너
        socket.on('timer_update', function(data) {
            if (data.matchId === matchId) {
                timerState.currentSeconds = data.seconds;
                updateTimerDisplay();
            }
        });

        socket.on('score_update', function(data) {
            if (data.matchId === matchId) {
                document.getElementById(`${data.team}-score`).textContent = data.score;
            }
        });

        socket.on('team_name_update', function(data) {
            if (data.matchId === matchId) {
                document.getElementById(`${data.team}-team-name`).value = data.name;
            }
        });

        socket.on('team_color_update', function(data) {
            if (data.matchId === matchId) {
                document.getElementById(`${data.team}-team-color`).value = data.color;
            }
        });
    </script>
</body>
</html>