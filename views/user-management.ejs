<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>사용자 관리 - 스포츠 코더</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .user-card {
            transition: all 0.3s ease;
            border: 1px solid #e9ecef;
        }
        .user-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .role-badge {
            font-size: 0.75rem;
        }
        .status-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 5px;
        }
        .status-active {
            background-color: #28a745;
        }
        .status-inactive {
            background-color: #dc3545;
        }
        .add-user-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            z-index: 1000;
        }
    </style>
</head>
<body>
    <%- include('partials/header', { title: '사용자 관리' }) %>
    
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h3><i class="bi bi-people"></i> 사용자 목록</h3>
                    <div>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
                            <i class="bi bi-person-plus"></i> 새 사용자 추가
                        </button>
                    </div>
                </div>

                <!-- 사용자 목록 -->
                <div class="row" id="usersList">
                    <% if (users && users.length > 0) { %>
                        <% users.forEach(user => { %>
                            <div class="col-md-6 col-lg-4 mb-3">
                                <div class="card user-card h-100">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start mb-3">
                                            <div>
                                                <h5 class="card-title mb-1">
                                                    <span class="status-indicator <%= user.is_active ? 'status-active' : 'status-inactive' %>"></span>
                                                    <%= user.full_name || user.username %>
                                                </h5>
                                                <p class="text-muted mb-0">@<%= user.username %></p>
                                            </div>
                                            <span class="badge <%= user.role === 'admin' ? 'bg-danger' : 'bg-primary' %> role-badge">
                                                <%= user.role === 'admin' ? '관리자' : '사용자' %>
                                            </span>
                                        </div>
                                        
                                        <% if (user.email) { %>
                                            <p class="card-text small text-muted mb-2">
                                                <i class="bi bi-envelope"></i> <%= user.email %>
                                            </p>
                                        <% } %>
                                        
                                        <p class="card-text small text-muted mb-3">
                                            <i class="bi bi-calendar"></i> 
                                            가입일: <%= new Date(user.created_at).toLocaleDateString('ko-KR') %>
                                        </p>
                                        
                                        <% if (user.last_login) { %>
                                            <p class="card-text small text-muted mb-3">
                                                <i class="bi bi-clock"></i> 
                                                마지막 로그인: <%= new Date(user.last_login).toLocaleString('ko-KR') %>
                                            </p>
                                        <% } %>
                                        
                                        <div class="d-flex gap-2">
                                            <button class="btn btn-sm btn-outline-primary" onclick="editUser(<%= user.id %>)">
                                                <i class="bi bi-pencil"></i> 수정
                                            </button>
                                            <% if (user.role !== 'admin' || users.filter(u => u.role === 'admin').length > 1) { %>
                                                <button class="btn btn-sm btn-outline-danger" onclick="deleteUser(<%= user.id %>)">
                                                    <i class="bi bi-trash"></i> 삭제
                                                </button>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="col-12">
                            <div class="text-center py-5">
                                <i class="bi bi-people display-1 text-muted"></i>
                                <h4 class="text-muted mt-3">등록된 사용자가 없습니다</h4>
                                <p class="text-muted">새 사용자를 추가해보세요.</p>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <!-- 사용자 추가 모달 -->
    <div class="modal fade" id="addUserModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">새 사용자 추가</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="addUserForm">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="addUsername" class="form-label">사용자명 *</label>
                            <input type="text" class="form-control" id="addUsername" name="username" required>
                            <div class="form-text">2-50자, 영문, 숫자, 언더스코어만 사용 가능</div>
                        </div>
                        <div class="mb-3">
                            <label for="addPassword" class="form-label">비밀번호 *</label>
                            <input type="password" class="form-control" id="addPassword" name="password" required>
                            <div class="form-text">최소 6자 이상</div>
                        </div>
                        <div class="mb-3">
                            <label for="addConfirmPassword" class="form-label">비밀번호 확인 *</label>
                            <input type="password" class="form-control" id="addConfirmPassword" name="confirmPassword" required>
                        </div>
                        <div class="mb-3">
                            <label for="addFullName" class="form-label">이름</label>
                            <input type="text" class="form-control" id="addFullName" name="full_name">
                        </div>
                        <div class="mb-3">
                            <label for="addEmail" class="form-label">이메일</label>
                            <input type="email" class="form-control" id="addEmail" name="email">
                        </div>
                        <div class="mb-3">
                            <label for="addRole" class="form-label">권한</label>
                            <select class="form-select" id="addRole" name="role">
                                <option value="user">사용자</option>
                                <option value="admin">관리자</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                        <button type="submit" class="btn btn-primary">추가</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- 사용자 수정 모달 -->
    <div class="modal fade" id="editUserModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">사용자 수정</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="editUserForm">
                    <input type="hidden" id="editUserId" name="id">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="editUsername" class="form-label">사용자명 *</label>
                            <input type="text" class="form-control" id="editUsername" name="username" required>
                        </div>
                        <div class="mb-3">
                            <label for="editPassword" class="form-label">새 비밀번호</label>
                            <input type="password" class="form-control" id="editPassword" name="password">
                            <div class="form-text">비밀번호를 변경하지 않으려면 비워두세요</div>
                        </div>
                        <div class="mb-3">
                            <label for="editFullName" class="form-label">이름</label>
                            <input type="text" class="form-control" id="editFullName" name="full_name">
                        </div>
                        <div class="mb-3">
                            <label for="editEmail" class="form-label">이메일</label>
                            <input type="email" class="form-control" id="editEmail" name="email">
                        </div>
                        <div class="mb-3">
                            <label for="editRole" class="form-label">권한</label>
                            <select class="form-select" id="editRole" name="role">
                                <option value="user">사용자</option>
                                <option value="admin">관리자</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="editIsActive" name="is_active" checked>
                                <label class="form-check-label" for="editIsActive">
                                    활성 상태
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                        <button type="submit" class="btn btn-primary">수정</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // 사용자 추가 폼 처리
        document.getElementById('addUserForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData);
            
            // 비밀번호 확인
            if (data.password !== data.confirmPassword) {
                alert('비밀번호가 일치하지 않습니다.');
                return;
            }
            
            try {
                const response = await fetch('/api/users', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    alert('사용자가 성공적으로 추가되었습니다.');
                    location.reload();
                } else {
                    alert('오류: ' + result.error);
                }
            } catch (error) {
                alert('오류가 발생했습니다: ' + error.message);
            }
        });

        // 사용자 수정
        function editUser(userId) {
            // 사용자 데이터 가져오기
            fetch(`/api/users/${userId}`)
                .then(response => response.json())
                .then(user => {
                    document.getElementById('editUserId').value = user.id;
                    document.getElementById('editUsername').value = user.username;
                    document.getElementById('editFullName').value = user.full_name || '';
                    document.getElementById('editEmail').value = user.email || '';
                    document.getElementById('editRole').value = user.role;
                    document.getElementById('editIsActive').checked = user.is_active;
                    
                    const modal = new bootstrap.Modal(document.getElementById('editUserModal'));
                    modal.show();
                })
                .catch(error => {
                    alert('사용자 정보를 가져오는데 실패했습니다: ' + error.message);
                });
        }

        // 사용자 수정 폼 처리
        document.getElementById('editUserForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData);
            data.is_active = document.getElementById('editIsActive').checked;
            
            // 빈 비밀번호 제거
            if (!data.password) {
                delete data.password;
            }
            
            try {
                const response = await fetch(`/api/users/${data.id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    alert('사용자 정보가 성공적으로 수정되었습니다.');
                    location.reload();
                } else {
                    alert('오류: ' + result.error);
                }
            } catch (error) {
                alert('오류가 발생했습니다: ' + error.message);
            }
        });

        // 사용자 삭제
        function deleteUser(userId) {
            if (confirm('정말로 이 사용자를 삭제하시겠습니까?')) {
                fetch(`/api/users/${userId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(result => {
                    if (response.ok) {
                        alert('사용자가 성공적으로 삭제되었습니다.');
                        location.reload();
                    } else {
                        alert('오류: ' + result.error);
                    }
                })
                .catch(error => {
                    alert('오류가 발생했습니다: ' + error.message);
                });
            }
        }
    </script>
</body>
</html>
