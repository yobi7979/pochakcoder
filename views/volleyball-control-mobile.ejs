<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>배구 모바일 컨트롤</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <script src="/socket.io/socket.io.js"></script>
    <style>
        :root {
            --primary-color: #007bff;
            --secondary-color: #6c757d;
            --success-color: #28a745;
            --danger-color: #dc3545;
            --warning-color: #ffc107;
            --light-color: #f8f9fa;
            --dark-color: #343a40;
            --volleyball-orange: #ff6b35;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            background-color: var(--light-color);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            padding: 10px;
            min-height: 100vh;
        }
        
        .mobile-panel {
            max-width: 100%;
            background-color: white;
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        
        .panel-header {
            background-color: var(--volleyball-orange);
            color: white;
            padding: 15px;
            text-align: center;
        }
        
        .panel-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin: 0;
        }
        
        .score-section {
            padding: 20px;
            background-color: var(--light-color);
        }
        
        .score-display {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .team-score {
            text-align: center;
            flex: 1;
        }
        
        .team-name {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: var(--dark-color);
        }
        
        .score-value {
            font-size: 3rem;
            font-weight: bold;
            color: var(--volleyball-orange);
            margin-bottom: 10px;
        }
        
        .score-controls {
            display: flex;
            justify-content: center;
            gap: 10px;
        }
        
        .score-btn {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: none;
            font-size: 1.5rem;
            font-weight: bold;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .score-btn.plus {
            background-color: var(--success-color);
            color: white;
        }
        
        .score-btn.minus {
            background-color: var(--danger-color);
            color: white;
        }
        
        .score-divider {
            font-size: 2rem;
            font-weight: bold;
            color: var(--dark-color);
            margin: 0 20px;
        }
        
        .set-info {
            text-align: center;
            margin-bottom: 20px;
        }
        
        .current-set {
            font-size: 1.5rem;
            font-weight: bold;
            color: var(--volleyball-orange);
            margin-bottom: 10px;
        }
        
        .sets-summary {
            display: flex;
            justify-content: center;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .set-item {
            background-color: white;
            padding: 8px 12px;
            border-radius: 8px;
            border: 2px solid #ddd;
            font-size: 0.9rem;
            font-weight: bold;
        }
        
        .set-item.winner {
            background-color: var(--success-color);
            color: white;
            border-color: var(--success-color);
        }
        
        .control-section {
            padding: 20px;
        }
        
        .control-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .control-item {
            background-color: var(--light-color);
            padding: 15px;
            border-radius: 12px;
            text-align: center;
        }
        
        .control-title {
            font-size: 0.9rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: var(--dark-color);
        }
        
        .control-value {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 10px;
        }
        
        .control-buttons {
            display: flex;
            gap: 5px;
        }
        
        .control-btn {
            flex: 1;
            padding: 8px;
            border: none;
            border-radius: 6px;
            font-size: 0.8rem;
            font-weight: bold;
        }
        
        .control-btn.primary {
            background-color: var(--primary-color);
            color: white;
        }
        
        .control-btn.warning {
            background-color: var(--warning-color);
            color: var(--dark-color);
        }
        
        .control-btn.danger {
            background-color: var(--danger-color);
            color: white;
        }
        
        .serving-section {
            background-color: var(--light-color);
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 20px;
        }
        
        .serving-title {
            text-align: center;
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 15px;
            color: var(--dark-color);
        }
        
        .serving-teams {
            display: flex;
            justify-content: space-around;
            gap: 10px;
        }
        
        .serving-team {
            flex: 1;
            padding: 15px;
            border-radius: 8px;
            text-align: center;
            font-weight: bold;
            font-size: 1rem;
        }
        
        .serving-team.active {
            background-color: var(--warning-color);
            color: var(--dark-color);
        }
        
        .serving-team.inactive {
            background-color: #e9ecef;
            color: var(--secondary-color);
        }
        
        .timer-section {
            background-color: var(--light-color);
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 20px;
        }
        
        .timer-display {
            text-align: center;
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 15px;
            color: var(--dark-color);
        }
        
        .timer-controls {
            display: flex;
            gap: 10px;
        }
        
        .timer-btn {
            flex: 1;
            padding: 12px;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: bold;
        }
        
        .timer-btn.success {
            background-color: var(--success-color);
            color: white;
        }
        
        .timer-btn.warning {
            background-color: var(--warning-color);
            color: var(--dark-color);
        }
        
        .timer-btn.danger {
            background-color: var(--danger-color);
            color: white;
        }
        
        .action-buttons {
            display: flex;
            gap: 10px;
            padding: 20px;
        }
        
        .action-btn {
            flex: 1;
            padding: 15px;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: bold;
        }
        
        .action-btn.secondary {
            background-color: var(--secondary-color);
            color: white;
        }
        
        .action-btn.primary {
            background-color: var(--volleyball-orange);
            color: white;
        }
        
        .set-management {
            background-color: var(--light-color);
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 20px;
        }
        
        .set-management-title {
            text-align: center;
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 15px;
            color: var(--dark-color);
        }
        
        .set-buttons {
            display: flex;
            gap: 10px;
        }
        
        .set-btn {
            flex: 1;
            padding: 10px;
            border: none;
            border-radius: 6px;
            font-size: 0.9rem;
            font-weight: bold;
        }
        
        .set-btn.warning {
            background-color: var(--warning-color);
            color: var(--dark-color);
        }
        
        .set-btn.info {
            background-color: var(--primary-color);
            color: white;
        }
        
        .set-btn.success {
            background-color: var(--success-color);
            color: white;
        }
        
        .set-btn.danger {
            background-color: var(--danger-color);
            color: white;
        }
    </style>
</head>
<body>
    <div class="mobile-panel">
        <div class="panel-header">
            <h1 class="panel-title">
                <i class="bi bi-volleyball"></i> 배구 컨트롤
            </h1>
        </div>

        <!-- 점수 섹션 -->
        <div class="score-section">
            <div class="score-display">
                <div class="team-score">
                    <div class="team-name"><%= match.home_team %></div>
                    <div class="score-value" id="homeScore"><%= match.match_data.home_score || 0 %></div>
                    <div class="score-controls">
                        <button class="score-btn minus" onclick="adjustScore('home', -1)">
                            <i class="bi bi-dash"></i>
                        </button>
                        <button class="score-btn plus" onclick="adjustScore('home', 1)">
                            <i class="bi bi-plus"></i>
                        </button>
                    </div>
                </div>
                <div class="score-divider">:</div>
                <div class="team-score">
                    <div class="team-name"><%= match.away_team %></div>
                    <div class="score-value" id="awayScore"><%= match.match_data.away_score || 0 %></div>
                    <div class="score-controls">
                        <button class="score-btn minus" onclick="adjustScore('away', -1)">
                            <i class="bi bi-dash"></i>
                        </button>
                        <button class="score-btn plus" onclick="adjustScore('away', 1)">
                            <i class="bi bi-plus"></i>
                        </button>
                    </div>
                </div>
            </div>
            
            <div class="set-info">
                <div class="current-set">
                    <i class="bi bi-1-circle"></i> <%= match.match_data.current_set || 1 %> 세트
                </div>
                <div class="sets-summary">
                    <% for(let i = 1; i <= 5; i++) { %>
                        <div class="set-item <%= match.match_data.set_scores && match.match_data.set_scores[i] && match.match_data.set_scores[i].winner ? 'winner' : '' %>">
                            <%= i %>: <%= match.match_data.set_scores && match.match_data.set_scores[i] ? `${match.match_data.set_scores[i].home}-${match.match_data.set_scores[i].away}` : '0-0' %>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>

        <!-- 세트 관리 -->
        <div class="set-management">
            <div class="set-management-title">세트 관리</div>
            <div class="set-buttons">
                <button class="set-btn warning" onclick="nextSet()">다음 세트</button>
                <button class="set-btn info" onclick="resetSet()">세트 리셋</button>
            </div>
            <div class="set-buttons" style="margin-top: 10px;">
                <button class="set-btn success" onclick="setSetScore(<%= match.match_data.current_set || 1 %>, 'home')">홈 승</button>
                <button class="set-btn danger" onclick="setSetScore(<%= match.match_data.current_set || 1 %>, 'away')">원정 승</button>
            </div>
        </div>

        <!-- 컨트롤 그리드 -->
        <div class="control-section">
            <div class="control-grid">
                <!-- 타임아웃 -->
                <div class="control-item">
                    <div class="control-title">홈팀 타임아웃</div>
                    <div class="control-value" id="homeTimeouts"><%= match.match_data.home_timeouts || 0 %>/2</div>
                    <div class="control-buttons">
                        <button class="control-btn warning" onclick="adjustTimeout('home', -1)">-</button>
                        <button class="control-btn warning" onclick="adjustTimeout('home', 1)">+</button>
                    </div>
                </div>
                
                <div class="control-item">
                    <div class="control-title">원정팀 타임아웃</div>
                    <div class="control-value" id="awayTimeouts"><%= match.match_data.away_timeouts || 0 %>/2</div>
                    <div class="control-buttons">
                        <button class="control-btn warning" onclick="adjustTimeout('away', -1)">-</button>
                        <button class="control-btn warning" onclick="adjustTimeout('away', 1)">+</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- 서브권 -->
        <div class="serving-section">
            <div class="serving-title">서브권</div>
            <div class="serving-teams">
                <div class="serving-team <%= match.match_data.serving_team === 'home' ? 'active' : 'inactive' %>" id="homeServing">
                    <%= match.home_team %>
                </div>
                <div class="serving-team <%= match.match_data.serving_team === 'away' ? 'active' : 'inactive' %>" id="awayServing">
                    <%= match.away_team %>
                </div>
            </div>
            <div style="text-align: center; margin-top: 15px;">
                <button class="control-btn primary" onclick="toggleServing()">서브권 변경</button>
            </div>
        </div>

        <!-- 타이머 -->
        <div class="timer-section">
            <div class="timer-display" id="timerDisplay">
                <%= formatTime(match.match_data.timer || 0) %>
            </div>
            <div class="timer-controls">
                <button class="timer-btn success" onclick="startTimer()">
                    <i class="bi bi-play"></i> 시작
                </button>
                <button class="timer-btn warning" onclick="pauseTimer()">
                    <i class="bi bi-pause"></i> 일시정지
                </button>
                <button class="timer-btn danger" onclick="resetTimer()">
                    <i class="bi bi-stop"></i> 리셋
                </button>
            </div>
        </div>

        <!-- 액션 버튼 -->
        <div class="action-buttons">
            <button class="action-btn secondary" onclick="window.open('/volleyball/<%= match.id %>', '_blank')">
                <i class="bi bi-eye"></i> 오버레이
            </button>
            <button class="action-btn primary" onclick="saveMatch()">
                <i class="bi bi-save"></i> 저장
            </button>
        </div>
    </div>

    <script>
        const socket = io();
        const matchId = '<%= match.id %>';
        let timerInterval;
        
        // Socket.IO 룸에 조인
        socket.emit('joinMatch', { matchId: matchId });

        // 점수 조정
        function adjustScore(team, amount) {
            const scoreElement = document.getElementById(team === 'home' ? 'homeScore' : 'awayScore');
            const currentScore = parseInt(scoreElement.textContent) || 0;
            const newScore = Math.max(0, currentScore + amount);
            scoreElement.textContent = newScore;
            
            updateScore(team, newScore);
        }

        // 점수 업데이트
        function updateScore(team, score) {
            const data = {
                matchId: matchId,
                team: team,
                score: score
            };
            
            socket.emit('updateVolleyballScore', data);
        }

        // 세트 점수 설정
        function setSetScore(setNumber, winner) {
            const homeScore = parseInt(document.getElementById('homeScore').textContent) || 0;
            const awayScore = parseInt(document.getElementById('awayScore').textContent) || 0;
            
            const data = {
                matchId: matchId,
                setNumber: setNumber,
                homeScore: homeScore,
                awayScore: awayScore,
                winner: winner
            };
            
            socket.emit('setVolleyballSetScore', data);
        }

        // 다음 세트
        function nextSet() {
            const currentSet = <%= match.match_data.current_set || 1 %>;
            if (currentSet < 5) {
                socket.emit('updateVolleyballCurrentSet', {
                    matchId: matchId,
                    currentSet: currentSet + 1
                });
                location.reload();
            }
        }

        // 세트 리셋
        function resetSet() {
            document.getElementById('homeScore').textContent = '0';
            document.getElementById('awayScore').textContent = '0';
            updateScore('home', 0);
            updateScore('away', 0);
        }

        // 타임아웃 조정
        function adjustTimeout(team, amount) {
            const timeoutElement = document.getElementById(team === 'home' ? 'homeTimeouts' : 'awayTimeouts');
            const currentTimeouts = parseInt(timeoutElement.textContent.split('/')[0]) || 0;
            const newTimeouts = Math.max(0, Math.min(2, currentTimeouts + amount));
            timeoutElement.textContent = `${newTimeouts}/2`;
            
            const data = {
                matchId: matchId,
                team: team,
                timeouts: newTimeouts
            };
            
            socket.emit('updateVolleyballTimeouts', data);
        }

        // 서브권 토글
        function toggleServing() {
            const homeServing = document.getElementById('homeServing');
            const awayServing = document.getElementById('awayServing');
            const currentServing = homeServing.classList.contains('active') ? 'home' : 'away';
            const newServing = currentServing === 'home' ? 'away' : 'home';
            
            homeServing.classList.toggle('active', newServing === 'home');
            homeServing.classList.toggle('inactive', newServing !== 'home');
            awayServing.classList.toggle('active', newServing === 'away');
            awayServing.classList.toggle('inactive', newServing !== 'away');
            
            const data = {
                matchId: matchId,
                servingTeam: newServing
            };
            
            socket.emit('updateVolleyballServing', data);
        }

        // 타이머 시작
        function startTimer() {
            if (!timerInterval) {
                timerInterval = setInterval(() => {
                    const timerDisplay = document.getElementById('timerDisplay');
                    const currentTime = parseInt(timerDisplay.dataset.time || 0);
                    const newTime = currentTime + 1;
                    timerDisplay.dataset.time = newTime;
                    timerDisplay.textContent = formatTime(newTime);
                    
                    socket.emit('updateVolleyballTimer', {
                        matchId: matchId,
                        timer: newTime
                    });
                }, 1000);
            }
        }

        // 타이머 일시정지
        function pauseTimer() {
            if (timerInterval) {
                clearInterval(timerInterval);
                timerInterval = null;
            }
        }

        // 타이머 리셋
        function resetTimer() {
            pauseTimer();
            const timerDisplay = document.getElementById('timerDisplay');
            timerDisplay.dataset.time = 0;
            timerDisplay.textContent = formatTime(0);
            
            socket.emit('updateVolleyballTimer', {
                matchId: matchId,
                timer: 0
            });
        }

        // 시간 포맷팅
        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const remainingSeconds = seconds % 60;
            return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
        }

        // 경기 저장
        function saveMatch() {
            socket.emit('saveMatch', { matchId: matchId });
            alert('경기가 저장되었습니다.');
        }

        // 소켓 이벤트 리스너
        socket.on('volleyballScoreUpdated', function(data) {
            if (data.matchId === matchId) {
                document.getElementById(data.team === 'home' ? 'homeScore' : 'awayScore').textContent = data.score;
            }
        });

        socket.on('volleyballTimeoutsUpdated', function(data) {
            if (data.matchId === matchId) {
                document.getElementById(data.team === 'home' ? 'homeTimeouts' : 'awayTimeouts').textContent = `${data.timeouts}/2`;
            }
        });

        socket.on('volleyballServingUpdated', function(data) {
            if (data.matchId === matchId) {
                const homeServing = document.getElementById('homeServing');
                const awayServing = document.getElementById('awayServing');
                
                homeServing.classList.toggle('active', data.servingTeam === 'home');
                homeServing.classList.toggle('inactive', data.servingTeam !== 'home');
                awayServing.classList.toggle('active', data.servingTeam === 'away');
                awayServing.classList.toggle('inactive', data.servingTeam !== 'away');
            }
        });

        // 페이지 로드 시 초기화
        document.addEventListener('DOMContentLoaded', function() {
            const timerDisplay = document.getElementById('timerDisplay');
            timerDisplay.dataset.time = '<%= match.match_data.timer || 0 %>';
        });
    </script>
</body>
</html>
